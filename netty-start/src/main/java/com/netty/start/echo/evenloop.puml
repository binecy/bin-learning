@startuml

interface EventLoopGroup {
    + next():EventLoop
    + register(Channel channel):ChannelFuture
}
interface EventLoop

EventLoopGroup <|- EventLoop
abstract class  SingleThreadEventLoop

EventLoop <|-  SingleThreadEventLoop

class NioEventLoop
SingleThreadEventLoop <|- NioEventLoop


/' Executor '/
interface EventExecutorGroup
EventExecutorGroup <|-- EventLoopGroup






interface ScheduledExecutorService
ScheduledExecutorService <|-- EventExecutorGroup


interface EventExecutor {
+ inEventLoop():boolean
}


abstract class SingleThreadEventExecutor

EventExecutor <|- SingleThreadEventExecutor


EventExecutor <|-- EventLoop



interface EventExecutorGroup {
    + next():EventExecutor
    + submit(Runnable task):Future
}
EventExecutorGroup <|- EventExecutor

interface Executor  {
    + execute(Runnable command)
}
Executor <|- ThreadPerTaskExecutor

interface ExecutorService {
    + shutdown()
}
ExecutorService <|-- ScheduledExecutorService


Executor <|-- ExecutorService


SingleThreadEventExecutor <|-- SingleThreadEventLoop
@enduml